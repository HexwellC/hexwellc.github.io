Странная вещь - человеческий мозг. Если засядет в одном из его полушарий ржавым
гвоздём мысль какая-то, то разъедает она серое вещество до дыры размером с
пятак. А если выдернуть инородное тело из черепной коробки, то оставленную им
пустоту необходимо чем-то заполнить, иначе сквозняки гулять будут и выдуют всё,
что накоплено непосильным интеллектуальным трудом. Желательно, конечно,
заполнять чем-то стоящим, плезным для ума и фантазии. Чем-то, способствующим
росту интеллекта.

Одним из таких ржавых гвоздей оказалось выражение "большинство мух не
ошибаются". Будь я историком. обязательно вспомнил бы Германию первой половины
ХХ века с несколькими миллионами "мух", полетевших за автором "Mein Kampf" и
ввёргшими пол мира в пучину хаоса на долгие 5 лет. Будь я биологом, порассуждал
бы на тему развития современной химической индустрии и её способности придать
благоухающим розам аромат и вкус истинно мушиных лакомств, способными сбить с
толку вышеуказанных насекомых.

Но я не историк, я программист. Да и речь не о крылатых существах, а о людях. А
потому хотелось бы высказаться относительно systemd и его позиционировании как
неотрывной части любого современного дистрибутива для настольных систем. Часто
мейнтейнеры больших дистрибутивов делают реверансы в сторону выбора большинства,
жертвуя качеством ради количества. Очень часто такие продукты как вышеупомянутый
systemd являются сделанными "на коленке" и не соответствуют стандартам, таким
как UNIX. Как следствие, дистрибутивы становятся непрозрачными, поведение
отдельных частей которых часто непредсказуемо и требует изучения каждого
компонента в отдельности, что создаёт дополнительные затраты времени и ресурсов.
При таком раскладе, дистрибутивы просто перестают выполнять свою задачу -
инкапсуляцию управления деталями системы.

На самом деле весь функционал любого дистрибутива должен заключаться лишь в
поставке базовых библиотек и утилит а так же обеспечении полуавтоматического
способа управления ими. Это включает в себя возможность заменить любую часть
системы без вторжения в её внутреннюю структуру, а так же выбор этой самой
замены при помощи пакетного менеджера. Из этого выплывает, чем на самом деле
должны заниматься мейнтейнеры, а именно - предоставлением и обслуживанием
репозиториев со всевозможными альтернативами уже поставленных инструментов. При
чём они не просто должны предоставлять источники пакетов, но и писать адаптивные
скрипты для их автоматической интеграции во всевозможные конфигурации. Не более,
но и не менее.

Но, вместо этого, большинство мейнтейнеров дистрибутивов предпочитают избавлять
себя от лишней работы, подменяя понятие выбора на "all inclusive" и называя это
болезнью. В результате, вместо расширения репозиториев они сокращают их размеры,
отбирая у пользователя выбор и заставляя его заниматься их работой по разбору
внутренностей системы для выполнения простейших задач вроде замены init-системы.

И всё же, давайте вернёмся к конкретному продукту, вызывающему у меня (и всех
системных администраторов старой закалки) лютое негодование. systemd был призван
унифицировать некоторые системы и, как побочный эффект, также ускорил их
загрузку, что тоже стало плюсом по мнению "большинства мух". Но на деле
полностью перечеркнул UNIX-way, когда одна программа делает только и только лишь
свою работу, выполняя её хорошо. На момент написания данной статьи, эта
init-система, кроме выполнения поставленной ей задачи управления демонами,
насчитывает более 65 компонентов. Некоторые, такие как journald, выполняют
задачи практически не связанные с инициализацией системы, но при этом заменить
их довольно трудно без вторжения во внутренности самой системы. А замена утилиты
системного логгинга вам явно понадобится, учитывая тот факт что systemd
использует бинарный, непрозрачный формат логов и при этом не имеет даже намёков
на защиту чувствительной информации.

При любом выборе часто появляются непрозрачные, но визуально очень удобные и
красивые варианты. Но их внешняя простота, элегантность и эргономика не делает
их более прозрачными. UNIX-way не просто дробит задачи, он выделяет их в
независимые заменяемые программы, унифицируя при этом их через общий файловый
интерфейс. Если рассматривать каждую такую маленькую утилиту по отдельности,
общую систему намного проще обслуживать, а код в целом легко поддаётся аудиту.
Это также привлекает новых контрибуторов и, в конце концов, даёт пользователю
выбор. Ведь намного проще, приятнее и полезнее будет прочитать серию рассказов
Борхеса чем все тома "Войны и Мира".
